library(devtools)
use_package("ReemManovaPackage")
use_r("compute_W_B")
use_r("compute_W_B_TwoWay ")
use_r("compute_W_B_TwoWay")
use_r("one_way_manova")
# One-Way MANOVA Function
one_way_manova <- function(dependent_vars, factor_A) {
matrices <- compute_W_B(dependent_vars, factor_A)
W <- matrices$W
B <- matrices$B
T <- W + B
Lambda <- det(W) / det(T)
p <- ncol(dependent_vars)
g <- length(unique(factor_A))
n <- nrow(dependent_vars)
df1 <- p * (g - 1)
df2 <- n - g - p + 1
approx_F <- ((1 - Lambda) / Lambda) * (df2 / df1)
p_value <- pf(approx_F, df1, df2, lower.tail = FALSE)
manova_table <- data.frame(
Statistic = c("Wilks' Lambda", "F-Statistic", "p-value"),
Value = c(Lambda, approx_F, p_value)
)
return(list(
type = "One-Way MANOVA",
table = manova_table,
decision = ifelse(p_value < 0.05, "Reject H0", "Fail to Reject H0")
))
}
use_r("two_way_manova")
devtools::load_all(".")
library(usethis)
use_r("two_way_manova")
use_r("one_way_manova")
use_r("compute_W_B_TwoWay")
use_r("compute_W_B")
use_test("two_way_manova")
use_test("one_way_manova")
use_test("compute_W_B_TwoWay")
use_test("compute_W_B")
#install.packages("roxygen2")
library(roxygen2)
roxygenize()
# Run all tests in the package
if (!requireNamespace("testthat", quietly = TRUE)) {
install.packages("testthat")
}
devtools::test()
devtools::check()
devtools::build()
devtools::install()
detach("package:DataTrans", unload = TRUE)
detach("package:ReemManovaPackage", unload = TRUE)
library(ReemManovaPackage)
# Check available functions
ls("package:ReemManovaPackage")
devtools::load_all(".")
library(usethis)
use_r("two_way_manova")
use_r("one_way_manova")
use_r("compute_W_B_TwoWay")
use_r("compute_W_B")
use_test("two_way_manova")
use_test("one_way_manova")
use_test("compute_W_B_TwoWay")
use_test("compute_W_B")
#install.packages("roxygen2")
library(roxygen2)
roxygenize()
detach("package:ReemManovaPackage", unload = TRUE)
devtools::check()
file.remove("NAMESPACE")
library(devtools)
# Run all tests in the package
if (!requireNamespace("testthat", quietly = TRUE)) {
install.packages("testthat")
}
devtools::test()
devtools::check()
devtools::build()
library(ReemManovaPackage)
# Check available functions
ls("package:ReemManovaPackage")
library(devtools)
install.packages("devtools")
library(devtools)
library(devtools)
detach("package:devtools", unload = TRUE)
library(devtools)
detach("package:devtools", unload = TRUE)
library(devtools)
file.remove("NAMESPACE")
library(devtools)
library(devtools)
devtools::load_all(".")
file.remove("NAMESPACE")
library(devtools)
file.remove("NAMESPACE.R")
library(devtools)
library(devtools)
# Run all tests in the package
if (!requireNamespace("testthat", quietly = TRUE)) {
install.packages("testthat")
}
devtools::test()
devtools::check()
devtools::build()
devtools::install()
detach("package:ReemManovaPackage", unload = TRUE)
library(ReemManovaPackage)
# Check available functions
ls("package:ReemManovaPackage")
library(usethis)
use_r("two_way_manova")
use_r("one_way_manova")
use_r("compute_W_B_TwoWay")
use_r("compute_W_B")
use_test("two_way_manova")
use_test("one_way_manova")
use_test("compute_W_B_TwoWay")
use_test("compute_W_B")
#install.packages("roxygen2")
library(roxygen2)
roxygenize()
install.packages("devtools")
library(devtools)
#install.packages("roxygen2")
library(roxygen2)
roxygenize()
install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenise()
library(usethis)
use_r("two_way_manova")
use_r("one_way_manova")
use_r("compute_W_B_TwoWay")
use_r("compute_W_B")
use_test("two_way_manova")
use_test("one_way_manova")
use_test("compute_W_B_TwoWay")
use_test("compute_W_B")
#install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenise()
library(devtools)
devtools::document()
library(devtools)
devtools::document()
rm(list = c("one_way_manova"))
library(devtools)
devtools::document()
devtools::check()
devtools::install()
library(ReemMANOVAPackage)
devtools::build()
# Run all tests in the package
if (!requireNamespace("testthat", quietly = TRUE)) {
install.packages("testthat")
}
devtools::test()
library(ReemMANOVAPackage)
# Check available functions
ls("package:ReemManovaPackage")
#install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenise()
library(usethis)
use_r("two_way_manova")
use_r("one_way_manova")
use_r("compute_W_B_TwoWay")
use_r("compute_W_B")
use_test("two_way_manova")
use_test("one_way_manova")
use_test("compute_W_B_TwoWay")
use_test("compute_W_B")
#install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenise()
library(devtools)
devtools::document()
devtools::check()
devtools::install()
# Run all tests in the package
if (!requireNamespace("testthat", quietly = TRUE)) {
install.packages("testthat")
}
devtools::test()
library(ReemMANOVAPackage)
# Check available functions
ls("package:ReemManovaPackage")
devtools::build()
library(ReemManovaPackage)
# Check available functions
ls("package:ReemManovaPackage")
git init
